pipeline {
    agent any
    stages{
  stage('Check Docker Network') {
            steps {
                script {
                    def networkExists = sh(script: 'docker network inspect lmsnetwork > /dev/null 2>&1', returnStatus: true)
                    if (networkExists == 0) {
                        echo 'Docker network lmsnetwork already exists'
                    } else {
                        sh 'docker network create -d bridge lmsnetwork'
                    }
                }
            }
        }
        stage('Check Database Container') {
            steps {
                script {
                    def containerExists = sh(script: 'docker inspect -f {{.State.Running}} mysql', returnStatus: true; do sleep 5 done)
                    if (containerExists == 0) {
                        echo 'MySQL container already exists'
                    } else {
                        sh 'docker container run -d --name mysql --network lmsnetwork -e MYSQL_ROOT_PASSWORD=P@55word -p 3306:3306 mysql:latest '
                    }
                }
            }
        }

        stage('Build Backend Docker Image') {
            steps {
                script {
                    // Change to the backend directory
                    dir('/var/lib/jenkins/workspace/BE-lms/LMS-BE') {
                        // Build Docker image for the backend
                        sh 'docker build -t be .'
                    }
                }
            }
        }
         stage('Run Docker Container') {
            steps {
                script {
                    // Check if the Docker container already exists
                    def containerExists = sh(script: "docker ps -a --format '{{.Names}}' | grep -q lms-be1", returnStatus: true)

                    if (containerExists == 0) {
                        // Container exists, stop and remove it
                        sh "docker stop lms-be1"
                        sh "docker rm lms-be1"
                    } else {
                        echo "No existing container found. Proceeding with the pipeline."
                    }

                    // Run the Docker container
                    sh "docker run -d --name lms-be1 -p 8080:8080 be"
                }
            }
        }
    }

}

