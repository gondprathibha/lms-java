pipeline {
    agent any

    environment {
        MYSQL_IMAGE_NAME = 'mysql:latest'
        CONTAINER_NAME = 'lmsbe'
    }

    stages {
        stage('Build MySQL Docker Image') {
            steps {
                script {
                    // Check if the Docker image already exists
                    def imageExists = sh(script: "docker image ls -q ${MYSQL_IMAGE_NAME}", returnStatus: true) == 0

                    if (!imageExists) {
                        // Build the Docker image if it doesn't exist
                        sh "docker build -t ${MYSQL_IMAGE_NAME} -f Dockerfile.mysql ."
                    } else {
                        echo "Docker image ${MYSQL_IMAGE_NAME} already exists. Skipping the build."
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Check if the Docker container is already running
                    def containerRunning = sh(script: "docker ps -q --filter name=${CONTAINER_NAME}", returnStatus: true) == 0

                    if (!containerRunning) {
                        // Run the Docker container if it's not already running
                        sh "docker run --name ${CONTAINER_NAME} -d -p 3306:3306 ${MYSQL_IMAGE_NAME}"
                    } else {
                        echo "Docker container ${CONTAINER_NAME} is already running. Skipping container creation."
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Docker image and container setup completed successfully."
        }
        failure {
            echo "Docker image and container setup failed."
        }
    }
}
